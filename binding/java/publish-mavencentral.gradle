apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'signing'

java {
    withJavadocJar()
    withSourcesJar()
}

group = PUBLISH_GROUP_ID
version = PUBLISH_VERSION

ext["signing.keyId"] = ''
ext["signing.password"] = ''
ext["signing.secretKeyRingFile"] = ''
ext["ossrhUsername"] = ''
ext["ossrhPassword"] = ''

def props = new Properties()
file("local.properties").withInputStream { props.load(it) }
File secretPropsFile = project.rootProject.file('local.properties')
if (secretPropsFile.exists()) {
    Properties p = new Properties()
    p.load(new FileInputStream(secretPropsFile))
    p.each { name, value ->
        ext[name] = value
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId group
            artifactId PUBLISH_ARTIFACT_ID
            version PUBLISH_VERSION

            from components.java

            pom {
                name = PUBLISH_ARTIFACT_ID
                description = 'Android SDK for Picovoice\'s Porcupine Wake Word engine'
                url = 'https://github.com/picovoice/porcupine'
                licenses {
                    license {
                        name = 'Apache License - v2.0'
                        url = 'https://github.com/Picovoice/porcupine/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'ilavery'
                        name = 'Ian Lavery'
                        email = 'ian@picovoice.ai'
                    }
                }
                scm {
                    connection = 'scm:git:github.com/picovoice/porcupine.git'
                    developerConnection = 'scm:git:ssh://github.com/picovoice/porcupine.git'
                    url = 'https://github.com/picovoice/porcupine/tree/main'
                }
            }
        }
    }

    repositories {
        maven {
            name = "sonatype"
            def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
